from vkbottle import  Keyboard, KeyboardButtonColor, Text, PhotoMessageUploader

# –ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
class Create:

    def __init__(self) -> None:
        self.secondary = KeyboardButtonColor.SECONDARY
        self.status = {
                        "–ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞": "base",
                        "–ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è": "favorites",
                        "üíî": "revome_favorites",
                        "–°–ª–µ–¥—É—é—â–∏–π": "favorites"
                      }

    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
    async def keyboard(self, **params):
        keyboard = Keyboard(one_time = False, inline = False)
        if params["indefication"] == "sity":
            for index, sity in enumerate(params["sity"]):
                if (index + 1) % 4 == 0:
                    keyboard.row
                    keyboard.add(
                                Text(sity), 
                                color = self.secondary
                                )
                else:
                    keyboard.add(
                                Text(sity), 
                                color = self.secondary
                                )
            return keyboard
        elif params["indefication"] in ["start", "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]:
            if params["indefication"] == "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                # keyboard.add(Text("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"), color = self.secondary)
                keyboard.add(
                                Text("–ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"), 
                                color = self.secondary
                            )
            else:
                keyboard.add(
                                Text("–ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"), 
                                color = self.secondary
                            )
            keyboard.row()
            keyboard.add(
                            Text("–ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è"), 
                            color = self.secondary
                        )
            keyboard.add(
                            Text("–ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫"), 
                            color = self.secondary
                        )
            keyboard.row()
            keyboard.add(
                            Text("–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"), 
                            color=self.secondary
                        )
            return keyboard
        
        elif params["indefication"] in ["–ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞", "–ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è", "üíî", "–°–ª–µ–¥—É—é—â–∏–π"]:
            if params["button_status"] == "favorites":
                status = params["button_status"]
                keyboard.add(
                                Text(
                                        "–°–ª–µ–¥—É—é—â–∏–π", 
                                        payload={"status":status}
                                    ), 
                                color = self.secondary
                            )
            elif params["button_status"] == "last":
                keyboard.add(
                                Text("üíî"), 
                                color = self.secondary
                            )
            elif params["button_status"] == "remove_like_last":
                pass
            else:
                status = self.status[f"{params['indefication']}"]
                keyboard.add(
                                Text(
                                        "–°–ª–µ–¥—É—é—â–∏–π", 
                                        payload={"status":status}
                                    ), 
                                color = self.secondary
                            )
            if params["indefication"] == "–ü–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è" or params["button_status"] == "favorites":
                keyboard.add(
                                Text("üíî"), 
                                color = self.secondary
                            )
            elif params["indefication"] == "–ù–∞—á–∞—Ç—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞":
                keyboard.row()
                keyboard.add(
                                Text("‚ù§"), 
                                color = self.secondary
                            )
                keyboard.add(
                                Text("üö´"), 
                                color = self.secondary
                            )
            keyboard.row()
            keyboard.add(
                            Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), 
                            color = self.secondary
                        )
            return keyboard
        
        elif params["indefication"] == "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
            keyboard.add(
                            Text("–ì–æ—Ä–æ–¥"), 
                            color = self.secondary
                        )
            keyboard.add(
                            Text("–í–æ–∑—Ä–∞—Å—Ç"), 
                            color = self.secondary
                        )
            keyboard.add(
                            Text("–ü–æ–ª"), 
                            color = self.secondary
                        )
            keyboard.row()
            keyboard.add(Text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"), color = self.secondary)
            return keyboard